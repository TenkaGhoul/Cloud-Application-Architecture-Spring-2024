{"ast":null,"code":"var _jsxFileName = \"/home/tenka/Unicorn/Cloud_Computing/meal-plan-pro/Front-end/src/components/ListeRecettesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListeRecettesPage() {\n  _s();\n  const [recipe, setRecipe] = useState({\n    title: '',\n    prepTime: '',\n    cookTime: '',\n    ingredients: [],\n    instructions: ''\n  });\n  const [ingredient, setIngredient] = useState({\n    name: '',\n    quantity: '',\n    unit: ''\n  });\n  const [isIngredientLocked, setIsIngredientLocked] = useState(false);\n  const [customQuantity, setCustomQuantity] = useState('');\n  const [quantityOptions] = useState([...Array(8).keys()].map(i => (i + 1) * 25));\n  const [unitOptions] = useState(['pièce', 'mL', 'cl', 'L', 'g', 'kg', 'cuillère à café', 'cuillère à soupe']);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'title') {\n      // Validation pour le titre : uniquement des lettres de l'alphabet\n      const regex = /^[a-zA-Z\\s]*$/;\n      if (regex.test(value) || value === '') {\n        setRecipe(prevRecipe => ({\n          ...prevRecipe,\n          [name]: value\n        }));\n      }\n    } else if ((name === 'prepTime' || name === 'cookTime') && /^\\d+$/.test(value)) {\n      // Vérifier si le champ est prepTime ou cookTime et si la valeur est un entier\n      setRecipe(prevRecipe => ({\n        ...prevRecipe,\n        [name]: value\n      }));\n    } else if (name === 'instructions') {\n      // Validation pour les instructions : uniquement des lettres de l'alphabet\n      const regex = /^[a-zA-Z\\s]*$/;\n      if (regex.test(value) || value === '') {\n        setRecipe(prevRecipe => ({\n          ...prevRecipe,\n          [name]: value\n        }));\n      }\n    }\n  };\n  const handleIngredientChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'name') {\n      // Validation pour le nom de l'ingrédient : uniquement des lettres de l'alphabet\n      const regex = /^[a-zA-Z\\s]*$/;\n      if (regex.test(value) || value === '') {\n        setIngredient(prevIngredient => ({\n          ...prevIngredient,\n          [name]: value\n        }));\n      }\n    } else {\n      setIngredient(prevIngredient => ({\n        ...prevIngredient,\n        [name]: value\n      }));\n    }\n  };\n  const addIngredient = e => {\n    e.preventDefault();\n    if (!isIngredientLocked) {\n      const newIngredient = {\n        ...ingredient\n      };\n      if (ingredient.quantity === 'custom') {\n        newIngredient.quantity = customQuantity;\n      }\n      setRecipe(prevRecipe => ({\n        ...prevRecipe,\n        ingredients: [...prevRecipe.ingredients, newIngredient]\n      }));\n      setIngredient({\n        name: '',\n        quantity: '',\n        unit: ''\n      });\n      setCustomQuantity('');\n    }\n  };\n  const sauvegarderRecette = () => {\n    // Vérifier si tous les champs obligatoires sont remplis\n    if (recipe.title.trim() === '' || recipe.prepTime.trim() === '' || recipe.cookTime.trim() === '' || recipe.ingredients.length === 0 || recipe.instructions.trim() === '') {\n      alert('Veuillez remplir tous les champs obligatoires.');\n      return;\n    }\n\n    // Préparez les données à envoyer\n    const data = {\n      title: recipe.title,\n      prepTime: recipe.prepTime,\n      cookTime: recipe.cookTime,\n      ingredients: recipe.ingredients,\n      instructions: recipe.instructions\n    };\n\n    // Envoyez les données au serveur\n    axios.post('http://localhost:5000/recipe-list', data).then(response => {\n      console.log(response.data);\n      alert('Recette sauvegardée avec succès !');\n      // Réinitialisez le formulaire après avoir sauvegardé avec succès\n      setRecipe({\n        title: '',\n        prepTime: '',\n        cookTime: '',\n        ingredients: [],\n        instructions: ''\n      });\n    }).catch(error => {\n      console.error('Erreur lors de la sauvegarde de la recette : ', error);\n      alert('Erreur lors de la sauvegarde de la recette.');\n    });\n  };\n  const toggleIngredientLock = () => {\n    setIsIngredientLocked(prevLock => !prevLock);\n  };\n  const handleSelectChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (value === 'custom') {\n      setIngredient(prevIngredient => ({\n        ...prevIngredient,\n        [name]: value\n      }));\n    } else {\n      setIngredient(prevIngredient => ({\n        ...prevIngredient,\n        [name]: value,\n        quantity: value\n      }));\n    }\n  };\n  const getQuantityOptions = () => {\n    if (ingredient.unit === 'pièce' || ingredient.unit === 'cuillère à café' || ingredient.unit === 'cuillère à soupe') {\n      return [...Array(9).keys()].map(i => i + 1);\n    } else {\n      return [...Array(8).keys()].map(i => (i + 1) * 25);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cr\\xE9er une nouvelle recette\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Titre de la recette:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          value: recipe.title,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"prepTime\",\n          children: \"Temps de pr\\xE9paration (en minutes):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"prepTime\",\n          name: \"prepTime\",\n          value: recipe.prepTime,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cookTime\",\n          children: \"Temps de cuisson (en minutes):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"cookTime\",\n          name: \"cookTime\",\n          value: recipe.cookTime,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Liste des ingr\\xE9dients:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: `${ingredient.name}: ${ingredient.quantity} ${ingredient.unit}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Nom de l'ingr\\xE9dient\",\n            name: \"name\",\n            value: ingredient.name,\n            onChange: handleIngredientChange,\n            required: true,\n            disabled: isIngredientLocked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"unit\",\n            value: ingredient.unit,\n            onChange: handleSelectChange,\n            required: true,\n            disabled: isIngredientLocked,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"S\\xE9lectionner une unit\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), unitOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"quantity\",\n            value: ingredient.quantity,\n            onChange: handleSelectChange,\n            required: true,\n            disabled: isIngredientLocked,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"S\\xE9lectionner une quantit\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), getQuantityOptions().map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"custom\",\n              children: \"Autre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), ingredient.quantity === 'custom' && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Entrez la quantit\\xE9\",\n            value: customQuantity,\n            onChange: e => setCustomQuantity(e.target.value),\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addIngredient,\n            disabled: isIngredientLocked,\n            children: \"Ajouter l'ingr\\xE9dient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"lockIngredients\",\n            checked: isIngredientLocked,\n            onChange: toggleIngredientLock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lockIngredients\",\n            children: \"Verrouiller les ingr\\xE9dients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"instructions\",\n          children: \"Instructions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"instructions\",\n          name: \"instructions\",\n          value: recipe.instructions,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sauvegarderRecette,\n        children: \"Valider et sauvegarder la recette\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n}\n_s(ListeRecettesPage, \"nUcDFZTWXcL9MJAu+mIGBPJcxVA=\");\n_c = ListeRecettesPage;\nexport default ListeRecettesPage;\nvar _c;\n$RefreshReg$(_c, \"ListeRecettesPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ListeRecettesPage","_s","recipe","setRecipe","title","prepTime","cookTime","ingredients","instructions","ingredient","setIngredient","name","quantity","unit","isIngredientLocked","setIsIngredientLocked","customQuantity","setCustomQuantity","quantityOptions","Array","keys","map","i","unitOptions","handleChange","e","value","target","regex","test","prevRecipe","handleIngredientChange","prevIngredient","addIngredient","preventDefault","newIngredient","sauvegarderRecette","trim","length","alert","data","post","then","response","console","log","catch","error","toggleIngredientLock","prevLock","handleSelectChange","getQuantityOptions","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","index","placeholder","disabled","option","min","onClick","checked","_c","$RefreshReg$"],"sources":["/home/tenka/Unicorn/Cloud_Computing/meal-plan-pro/Front-end/src/components/ListeRecettesPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from \"axios\";\n\nfunction ListeRecettesPage() {\n    const [recipe, setRecipe] = useState({\n        title: '',\n        prepTime: '',\n        cookTime: '',\n        ingredients: [],\n        instructions: ''\n    });\n\n    const [ingredient, setIngredient] = useState({\n        name: '',\n        quantity: '',\n        unit: ''\n    });\n\n    const [isIngredientLocked, setIsIngredientLocked] = useState(false);\n    const [customQuantity, setCustomQuantity] = useState('');\n\n    const [quantityOptions] = useState([...Array(8).keys()].map(i => (i + 1) * 25));\n    const [unitOptions] = useState(['pièce', 'mL', 'cl', 'L', 'g', 'kg', 'cuillère à café', 'cuillère à soupe']);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        if (name === 'title') {\n            // Validation pour le titre : uniquement des lettres de l'alphabet\n            const regex = /^[a-zA-Z\\s]*$/;\n            if (regex.test(value) || value === '') {\n                setRecipe(prevRecipe => ({\n                    ...prevRecipe,\n                    [name]: value\n                }));\n            }\n        } else if ((name === 'prepTime' || name === 'cookTime') && /^\\d+$/.test(value)) {\n            // Vérifier si le champ est prepTime ou cookTime et si la valeur est un entier\n            setRecipe(prevRecipe => ({\n                ...prevRecipe,\n                [name]: value\n            }));\n        } else if (name === 'instructions') {\n            // Validation pour les instructions : uniquement des lettres de l'alphabet\n            const regex = /^[a-zA-Z\\s]*$/;\n            if (regex.test(value) || value === '') {\n                setRecipe(prevRecipe => ({\n                    ...prevRecipe,\n                    [name]: value\n                }));\n            }\n        }\n    };\n\n    const handleIngredientChange = (e) => {\n        const { name, value } = e.target;\n        if (name === 'name') {\n            // Validation pour le nom de l'ingrédient : uniquement des lettres de l'alphabet\n            const regex = /^[a-zA-Z\\s]*$/;\n            if (regex.test(value) || value === '') {\n                setIngredient(prevIngredient => ({\n                    ...prevIngredient,\n                    [name]: value\n                }));\n            }\n        } else {\n            setIngredient(prevIngredient => ({\n                ...prevIngredient,\n                [name]: value\n            }));\n        }\n    };\n\n    const addIngredient = (e) => {\n        e.preventDefault();\n        if (!isIngredientLocked) {\n            const newIngredient = { ...ingredient };\n            if (ingredient.quantity === 'custom') {\n                newIngredient.quantity = customQuantity;\n            }\n            setRecipe(prevRecipe => ({\n                ...prevRecipe,\n                ingredients: [...prevRecipe.ingredients, newIngredient]\n            }));\n            setIngredient({\n                name: '',\n                quantity: '',\n                unit: ''\n            });\n            setCustomQuantity('');\n        }\n    };\n\n    const sauvegarderRecette = () => {\n        // Vérifier si tous les champs obligatoires sont remplis\n        if (\n            recipe.title.trim() === '' ||\n            recipe.prepTime.trim() === '' ||\n            recipe.cookTime.trim() === '' ||\n            recipe.ingredients.length === 0 ||\n            recipe.instructions.trim() === ''\n        ) {\n            alert('Veuillez remplir tous les champs obligatoires.');\n            return;\n        }\n\n        // Préparez les données à envoyer\n        const data = {\n            title: recipe.title,\n            prepTime: recipe.prepTime,\n            cookTime: recipe.cookTime,\n            ingredients: recipe.ingredients,\n            instructions: recipe.instructions\n        };\n\n        // Envoyez les données au serveur\n        axios.post('http://localhost:5000/recipe-list', data)\n            .then(response => {\n                console.log(response.data);\n                alert('Recette sauvegardée avec succès !');\n                // Réinitialisez le formulaire après avoir sauvegardé avec succès\n                setRecipe({\n                    title: '',\n                    prepTime: '',\n                    cookTime: '',\n                    ingredients: [],\n                    instructions: ''\n                });\n            })\n            .catch(error => {\n                console.error('Erreur lors de la sauvegarde de la recette : ', error);\n                alert('Erreur lors de la sauvegarde de la recette.');\n            });\n    };\n\n    const toggleIngredientLock = () => {\n        setIsIngredientLocked(prevLock => !prevLock);\n    };\n\n    const handleSelectChange = (e) => {\n        const { name, value } = e.target;\n        if (value === 'custom') {\n            setIngredient(prevIngredient => ({\n                ...prevIngredient,\n                [name]: value\n            }));\n        } else {\n            setIngredient(prevIngredient => ({\n                ...prevIngredient,\n                [name]: value,\n                quantity: value\n            }));\n        }\n    };\n\n    const getQuantityOptions = () => {\n        if (ingredient.unit === 'pièce' || ingredient.unit === 'cuillère à café' || ingredient.unit === 'cuillère à soupe') {\n            return [...Array(9).keys()].map(i => i + 1);\n        } else {\n            return [...Array(8).keys()].map(i => (i + 1) * 25);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Créer une nouvelle recette</h2>\n            <form onSubmit={e => e.preventDefault()}>\n                <div>\n                    <label htmlFor=\"title\">Titre de la recette:</label>\n                    <input\n                        type=\"text\"\n                        id=\"title\"\n                        name=\"title\"\n                        value={recipe.title}\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"prepTime\">Temps de préparation (en minutes):</label>\n                    <input\n                        type=\"text\"\n                        id=\"prepTime\"\n                        name=\"prepTime\"\n                        value={recipe.prepTime}\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"cookTime\">Temps de cuisson (en minutes):</label>\n                    <input\n                        type=\"text\"\n                        id=\"cookTime\"\n                        name=\"cookTime\"\n                        value={recipe.cookTime}\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n                <div>\n                    <label>Liste des ingrédients:</label>\n                    <ul>\n                        {recipe.ingredients.map((ingredient, index) => (\n                            <li key={index}>{`${ingredient.name}: ${ingredient.quantity} ${ingredient.unit}`}</li>\n                        ))}\n                    </ul>\n                    <div>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Nom de l'ingrédient\"\n                            name=\"name\"\n                            value={ingredient.name}\n                            onChange={handleIngredientChange}\n                            required\n                            disabled={isIngredientLocked}\n                        />\n                        <select\n                            name=\"unit\"\n                            value={ingredient.unit}\n                            onChange={handleSelectChange}\n                            required\n                            disabled={isIngredientLocked}\n                        >\n                            <option value=\"\">Sélectionner une unité</option>\n                            {unitOptions.map(option => (\n                                <option key={option} value={option}>{option}</option>\n                            ))}\n                        </select>\n                        <select\n                            name=\"quantity\"\n                            value={ingredient.quantity}\n                            onChange={handleSelectChange}\n                            required\n                            disabled={isIngredientLocked}\n                        >\n                            <option value=\"\">Sélectionner une quantité</option>\n                            {getQuantityOptions().map(option => (\n                                <option key={option} value={option}>{option}</option>\n                            ))}\n                            <option value=\"custom\">Autre</option>\n                        </select>\n                        {ingredient.quantity === 'custom' && (\n                            <input\n                                type=\"text\"\n                                placeholder=\"Entrez la quantité\"\n                                value={customQuantity}\n                                onChange={e => setCustomQuantity(e.target.value)}\n                                min=\"0\"\n                            />\n                        )}\n                        <button onClick={addIngredient} disabled={isIngredientLocked}>Ajouter l'ingrédient</button>\n                    </div>\n                    <div>\n                        <input\n                            type=\"checkbox\"\n                            id=\"lockIngredients\"\n                            checked={isIngredientLocked}\n                            onChange={toggleIngredientLock}\n                        />\n                        <label htmlFor=\"lockIngredients\">Verrouiller les ingrédients</label>\n                    </div>\n                </div>\n                <div>\n                    <label htmlFor=\"instructions\">Instructions:</label>\n                    <textarea\n                        id=\"instructions\"\n                        name=\"instructions\"\n                        value={recipe.instructions}\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n                <button onClick={sauvegarderRecette}>Valider et sauvegarder la recette</button>\n            </form>\n        </div>\n    );\n}\n\nexport default ListeRecettesPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC;IACjCQ,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE;EAClB,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC;IACzCe,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE;EACV,CAAC,CAAC;EAEF,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAM,CAACsB,eAAe,CAAC,GAAGtB,QAAQ,CAAC,CAAC,GAAGuB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAACC,CAAC,IAAI,CAACA,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;EAC/E,MAAM,CAACC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,iBAAiB,EAAE,kBAAkB,CAAC,CAAC;EAE5G,MAAM4B,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEd,IAAI;MAAEe;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChC,IAAIhB,IAAI,KAAK,OAAO,EAAE;MAClB;MACA,MAAMiB,KAAK,GAAG,eAAe;MAC7B,IAAIA,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,IAAIA,KAAK,KAAK,EAAE,EAAE;QACnCvB,SAAS,CAAC2B,UAAU,KAAK;UACrB,GAAGA,UAAU;UACb,CAACnB,IAAI,GAAGe;QACZ,CAAC,CAAC,CAAC;MACP;IACJ,CAAC,MAAM,IAAI,CAACf,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,UAAU,KAAK,OAAO,CAACkB,IAAI,CAACH,KAAK,CAAC,EAAE;MAC5E;MACAvB,SAAS,CAAC2B,UAAU,KAAK;QACrB,GAAGA,UAAU;QACb,CAACnB,IAAI,GAAGe;MACZ,CAAC,CAAC,CAAC;IACP,CAAC,MAAM,IAAIf,IAAI,KAAK,cAAc,EAAE;MAChC;MACA,MAAMiB,KAAK,GAAG,eAAe;MAC7B,IAAIA,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,IAAIA,KAAK,KAAK,EAAE,EAAE;QACnCvB,SAAS,CAAC2B,UAAU,KAAK;UACrB,GAAGA,UAAU;UACb,CAACnB,IAAI,GAAGe;QACZ,CAAC,CAAC,CAAC;MACP;IACJ;EACJ,CAAC;EAED,MAAMK,sBAAsB,GAAIN,CAAC,IAAK;IAClC,MAAM;MAAEd,IAAI;MAAEe;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChC,IAAIhB,IAAI,KAAK,MAAM,EAAE;MACjB;MACA,MAAMiB,KAAK,GAAG,eAAe;MAC7B,IAAIA,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,IAAIA,KAAK,KAAK,EAAE,EAAE;QACnChB,aAAa,CAACsB,cAAc,KAAK;UAC7B,GAAGA,cAAc;UACjB,CAACrB,IAAI,GAAGe;QACZ,CAAC,CAAC,CAAC;MACP;IACJ,CAAC,MAAM;MACHhB,aAAa,CAACsB,cAAc,KAAK;QAC7B,GAAGA,cAAc;QACjB,CAACrB,IAAI,GAAGe;MACZ,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;EAED,MAAMO,aAAa,GAAIR,CAAC,IAAK;IACzBA,CAAC,CAACS,cAAc,CAAC,CAAC;IAClB,IAAI,CAACpB,kBAAkB,EAAE;MACrB,MAAMqB,aAAa,GAAG;QAAE,GAAG1B;MAAW,CAAC;MACvC,IAAIA,UAAU,CAACG,QAAQ,KAAK,QAAQ,EAAE;QAClCuB,aAAa,CAACvB,QAAQ,GAAGI,cAAc;MAC3C;MACAb,SAAS,CAAC2B,UAAU,KAAK;QACrB,GAAGA,UAAU;QACbvB,WAAW,EAAE,CAAC,GAAGuB,UAAU,CAACvB,WAAW,EAAE4B,aAAa;MAC1D,CAAC,CAAC,CAAC;MACHzB,aAAa,CAAC;QACVC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAE;MACV,CAAC,CAAC;MACFI,iBAAiB,CAAC,EAAE,CAAC;IACzB;EACJ,CAAC;EAED,MAAMmB,kBAAkB,GAAGA,CAAA,KAAM;IAC7B;IACA,IACIlC,MAAM,CAACE,KAAK,CAACiC,IAAI,CAAC,CAAC,KAAK,EAAE,IAC1BnC,MAAM,CAACG,QAAQ,CAACgC,IAAI,CAAC,CAAC,KAAK,EAAE,IAC7BnC,MAAM,CAACI,QAAQ,CAAC+B,IAAI,CAAC,CAAC,KAAK,EAAE,IAC7BnC,MAAM,CAACK,WAAW,CAAC+B,MAAM,KAAK,CAAC,IAC/BpC,MAAM,CAACM,YAAY,CAAC6B,IAAI,CAAC,CAAC,KAAK,EAAE,EACnC;MACEE,KAAK,CAAC,gDAAgD,CAAC;MACvD;IACJ;;IAEA;IACA,MAAMC,IAAI,GAAG;MACTpC,KAAK,EAAEF,MAAM,CAACE,KAAK;MACnBC,QAAQ,EAAEH,MAAM,CAACG,QAAQ;MACzBC,QAAQ,EAAEJ,MAAM,CAACI,QAAQ;MACzBC,WAAW,EAAEL,MAAM,CAACK,WAAW;MAC/BC,YAAY,EAAEN,MAAM,CAACM;IACzB,CAAC;;IAED;IACAX,KAAK,CAAC4C,IAAI,CAAC,mCAAmC,EAAED,IAAI,CAAC,CAChDE,IAAI,CAACC,QAAQ,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACH,IAAI,CAAC;MAC1BD,KAAK,CAAC,mCAAmC,CAAC;MAC1C;MACApC,SAAS,CAAC;QACNC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,WAAW,EAAE,EAAE;QACfC,YAAY,EAAE;MAClB,CAAC,CAAC;IACN,CAAC,CAAC,CACDsC,KAAK,CAACC,KAAK,IAAI;MACZH,OAAO,CAACG,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACrER,KAAK,CAAC,6CAA6C,CAAC;IACxD,CAAC,CAAC;EACV,CAAC;EAED,MAAMS,oBAAoB,GAAGA,CAAA,KAAM;IAC/BjC,qBAAqB,CAACkC,QAAQ,IAAI,CAACA,QAAQ,CAAC;EAChD,CAAC;EAED,MAAMC,kBAAkB,GAAIzB,CAAC,IAAK;IAC9B,MAAM;MAAEd,IAAI;MAAEe;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChC,IAAID,KAAK,KAAK,QAAQ,EAAE;MACpBhB,aAAa,CAACsB,cAAc,KAAK;QAC7B,GAAGA,cAAc;QACjB,CAACrB,IAAI,GAAGe;MACZ,CAAC,CAAC,CAAC;IACP,CAAC,MAAM;MACHhB,aAAa,CAACsB,cAAc,KAAK;QAC7B,GAAGA,cAAc;QACjB,CAACrB,IAAI,GAAGe,KAAK;QACbd,QAAQ,EAAEc;MACd,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;EAED,MAAMyB,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAI1C,UAAU,CAACI,IAAI,KAAK,OAAO,IAAIJ,UAAU,CAACI,IAAI,KAAK,iBAAiB,IAAIJ,UAAU,CAACI,IAAI,KAAK,kBAAkB,EAAE;MAChH,OAAO,CAAC,GAAGM,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC,MAAM;MACH,OAAO,CAAC,GAAGH,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAACC,CAAC,IAAI,CAACA,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IACtD;EACJ,CAAC;EAED,oBACIvB,OAAA;IAAAqD,QAAA,gBACIrD,OAAA;MAAAqD,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCzD,OAAA;MAAM0D,QAAQ,EAAEhC,CAAC,IAAIA,CAAC,CAACS,cAAc,CAAC,CAAE;MAAAkB,QAAA,gBACpCrD,OAAA;QAAAqD,QAAA,gBACIrD,OAAA;UAAO2D,OAAO,EAAC,OAAO;UAAAN,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnDzD,OAAA;UACI4D,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,OAAO;UACVjD,IAAI,EAAC,OAAO;UACZe,KAAK,EAAExB,MAAM,CAACE,KAAM;UACpByD,QAAQ,EAAErC,YAAa;UACvBsC,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNzD,OAAA;QAAAqD,QAAA,gBACIrD,OAAA;UAAO2D,OAAO,EAAC,UAAU;UAAAN,QAAA,EAAC;QAAkC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpEzD,OAAA;UACI4D,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,UAAU;UACbjD,IAAI,EAAC,UAAU;UACfe,KAAK,EAAExB,MAAM,CAACG,QAAS;UACvBwD,QAAQ,EAAErC,YAAa;UACvBsC,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNzD,OAAA;QAAAqD,QAAA,gBACIrD,OAAA;UAAO2D,OAAO,EAAC,UAAU;UAAAN,QAAA,EAAC;QAA8B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChEzD,OAAA;UACI4D,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,UAAU;UACbjD,IAAI,EAAC,UAAU;UACfe,KAAK,EAAExB,MAAM,CAACI,QAAS;UACvBuD,QAAQ,EAAErC,YAAa;UACvBsC,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNzD,OAAA;QAAAqD,QAAA,gBACIrD,OAAA;UAAAqD,QAAA,EAAO;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrCzD,OAAA;UAAAqD,QAAA,EACKlD,MAAM,CAACK,WAAW,CAACc,GAAG,CAAC,CAACZ,UAAU,EAAEsD,KAAK,kBACtChE,OAAA;YAAAqD,QAAA,EAAkB,GAAE3C,UAAU,CAACE,IAAK,KAAIF,UAAU,CAACG,QAAS,IAAGH,UAAU,CAACI,IAAK;UAAC,GAAvEkD,KAAK;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAuE,CACxF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACLzD,OAAA;UAAAqD,QAAA,gBACIrD,OAAA;YACI4D,IAAI,EAAC,MAAM;YACXK,WAAW,EAAC,wBAAqB;YACjCrD,IAAI,EAAC,MAAM;YACXe,KAAK,EAAEjB,UAAU,CAACE,IAAK;YACvBkD,QAAQ,EAAE9B,sBAAuB;YACjC+B,QAAQ;YACRG,QAAQ,EAAEnD;UAAmB;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACFzD,OAAA;YACIY,IAAI,EAAC,MAAM;YACXe,KAAK,EAAEjB,UAAU,CAACI,IAAK;YACvBgD,QAAQ,EAAEX,kBAAmB;YAC7BY,QAAQ;YACRG,QAAQ,EAAEnD,kBAAmB;YAAAsC,QAAA,gBAE7BrD,OAAA;cAAQ2B,KAAK,EAAC,EAAE;cAAA0B,QAAA,EAAC;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC/CjC,WAAW,CAACF,GAAG,CAAC6C,MAAM,iBACnBnE,OAAA;cAAqB2B,KAAK,EAAEwC,MAAO;cAAAd,QAAA,EAAEc;YAAM,GAA9BA,MAAM;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiC,CACvD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACTzD,OAAA;YACIY,IAAI,EAAC,UAAU;YACfe,KAAK,EAAEjB,UAAU,CAACG,QAAS;YAC3BiD,QAAQ,EAAEX,kBAAmB;YAC7BY,QAAQ;YACRG,QAAQ,EAAEnD,kBAAmB;YAAAsC,QAAA,gBAE7BrD,OAAA;cAAQ2B,KAAK,EAAC,EAAE;cAAA0B,QAAA,EAAC;YAAyB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAClDL,kBAAkB,CAAC,CAAC,CAAC9B,GAAG,CAAC6C,MAAM,iBAC5BnE,OAAA;cAAqB2B,KAAK,EAAEwC,MAAO;cAAAd,QAAA,EAAEc;YAAM,GAA9BA,MAAM;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiC,CACvD,CAAC,eACFzD,OAAA;cAAQ2B,KAAK,EAAC,QAAQ;cAAA0B,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,EACR/C,UAAU,CAACG,QAAQ,KAAK,QAAQ,iBAC7Bb,OAAA;YACI4D,IAAI,EAAC,MAAM;YACXK,WAAW,EAAC,uBAAoB;YAChCtC,KAAK,EAAEV,cAAe;YACtB6C,QAAQ,EAAEpC,CAAC,IAAIR,iBAAiB,CAACQ,CAAC,CAACE,MAAM,CAACD,KAAK,CAAE;YACjDyC,GAAG,EAAC;UAAG;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CACJ,eACDzD,OAAA;YAAQqE,OAAO,EAAEnC,aAAc;YAACgC,QAAQ,EAAEnD,kBAAmB;YAAAsC,QAAA,EAAC;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1F,CAAC,eACNzD,OAAA;UAAAqD,QAAA,gBACIrD,OAAA;YACI4D,IAAI,EAAC,UAAU;YACfC,EAAE,EAAC,iBAAiB;YACpBS,OAAO,EAAEvD,kBAAmB;YAC5B+C,QAAQ,EAAEb;UAAqB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC,eACFzD,OAAA;YAAO2D,OAAO,EAAC,iBAAiB;YAAAN,QAAA,EAAC;UAA2B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNzD,OAAA;QAAAqD,QAAA,gBACIrD,OAAA;UAAO2D,OAAO,EAAC,cAAc;UAAAN,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnDzD,OAAA;UACI6D,EAAE,EAAC,cAAc;UACjBjD,IAAI,EAAC,cAAc;UACnBe,KAAK,EAAExB,MAAM,CAACM,YAAa;UAC3BqD,QAAQ,EAAErC,YAAa;UACvBsC,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNzD,OAAA;QAAQqE,OAAO,EAAEhC,kBAAmB;QAAAgB,QAAA,EAAC;MAAiC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACvD,EAAA,CAjRQD,iBAAiB;AAAAsE,EAAA,GAAjBtE,iBAAiB;AAmR1B,eAAeA,iBAAiB;AAAC,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}