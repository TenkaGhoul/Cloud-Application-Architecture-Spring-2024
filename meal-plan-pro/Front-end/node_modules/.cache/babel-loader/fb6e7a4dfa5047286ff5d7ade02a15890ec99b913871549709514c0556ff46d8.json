{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tenka\\\\Desktop\\\\Cloud-Application-Architecture-Spring-2024-main\\\\meal-plan-pro\\\\Front-end\\\\src\\\\components\\\\CreateRecipe.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateRecipe() {\n  _s();\n  const [recipe, setRecipe] = useState({\n    title: '',\n    prepTime: '',\n    cookTime: '',\n    ingredients: [],\n    instructions: ''\n  });\n  const [ingredient, setIngredient] = useState({\n    name: '',\n    quantity: '',\n    unit: ''\n  });\n  const [isIngredientLocked, setIsIngredientLocked] = useState(false);\n  const [customQuantity, setCustomQuantity] = useState('');\n  const [quantityOptions] = useState([...Array(8).keys()].map(i => (i + 1) * 25));\n  const [unitOptions] = useState(['piece', 'mL', 'cl', 'L', 'g', 'kg', 'teaspoon', 'tablespoon']);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'title') {\n      // Validation for title: only alphabet letters\n      const regex = /^[a-zA-Z\\s]*$/;\n      if (regex.test(value) || value === '') {\n        setRecipe(prevRecipe => ({\n          ...prevRecipe,\n          [name]: value\n        }));\n      }\n    } else if ((name === 'prepTime' || name === 'cookTime') && /^\\d+$/.test(value)) {\n      // Check if the field is prepTime or cookTime and the value is an integer\n      setRecipe(prevRecipe => ({\n        ...prevRecipe,\n        [name]: value\n      }));\n    } else if (name === 'instructions') {\n      // Validation for instructions: only alphabet letters\n      const regex = /^[a-zA-Z\\s]*$/;\n      if (regex.test(value) || value === '') {\n        setRecipe(prevRecipe => ({\n          ...prevRecipe,\n          [name]: value\n        }));\n      }\n    }\n  };\n  const handleIngredientChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'name') {\n      // Validation for ingredient name: only alphabet letters\n      const regex = /^[a-zA-Z\\s]*$/;\n      if (regex.test(value) || value === '') {\n        setIngredient(prevIngredient => ({\n          ...prevIngredient,\n          [name]: value\n        }));\n      }\n    } else {\n      setIngredient(prevIngredient => ({\n        ...prevIngredient,\n        [name]: value\n      }));\n    }\n  };\n  const addIngredient = e => {\n    e.preventDefault();\n    if (!isIngredientLocked) {\n      const newIngredient = {\n        ...ingredient\n      };\n      if (ingredient.quantity === 'custom') {\n        newIngredient.quantity = customQuantity;\n      }\n      setRecipe(prevRecipe => ({\n        ...prevRecipe,\n        ingredients: [...prevRecipe.ingredients, newIngredient]\n      }));\n      setIngredient({\n        name: '',\n        quantity: '',\n        unit: ''\n      });\n      setCustomQuantity('');\n    }\n  };\n  const saveRecipe = () => {\n    // Check if all required fields are filled\n    if (recipe.title.trim() === '' || recipe.prepTime.trim() === '' || recipe.cookTime.trim() === '' || recipe.ingredients.length === 0 || recipe.instructions.trim() === '') {\n      alert('Please fill in all required fields.');\n      return;\n    }\n\n    // Prepare data to send\n    const data = {\n      title: recipe.title,\n      prepTime: recipe.prepTime,\n      cookTime: recipe.cookTime,\n      ingredients: recipe.ingredients,\n      instructions: recipe.instructions\n    };\n\n    // Send data to the server\n    axios.post('http://localhost:5000/recipe-list', data).then(response => {\n      console.log(response.data);\n      alert('Recipe saved successfully!');\n      // Reset the form after successfully saving\n      setRecipe({\n        title: '',\n        prepTime: '',\n        cookTime: '',\n        ingredients: [],\n        instructions: ''\n      });\n    }).catch(error => {\n      console.error('Error saving recipe: ', error);\n      alert('Error saving recipe.');\n    });\n  };\n  const toggleIngredientLock = () => {\n    setIsIngredientLocked(prevLock => !prevLock);\n  };\n  const handleSelectChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (value === 'custom') {\n      setIngredient(prevIngredient => ({\n        ...prevIngredient,\n        [name]: value\n      }));\n    } else {\n      setIngredient(prevIngredient => ({\n        ...prevIngredient,\n        [name]: value,\n        quantity: value\n      }));\n    }\n  };\n  const getQuantityOptions = () => {\n    if (ingredient.unit === 'piece' || ingredient.unit === 'teaspoon' || ingredient.unit === 'tablespoon' || ingredient.unit === 'kg' || ingredient.unit === 'L') {\n      return [...Array(9).keys()].map(i => i + 1);\n    } else {\n      return [...Array(8).keys()].map(i => (i + 1) * 25);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cr-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"cr-title\",\n      children: \"Create a new recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"cr-list\",\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cr-list-title\",\n          className: \"form-label\",\n          children: \"Recipe Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          value: recipe.title,\n          onChange: handleChange,\n          required: true,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"prepTime\",\n          className: \"form-label\",\n          children: \"Preparation Time (in minutes):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"prepTime\",\n          name: \"prepTime\",\n          value: recipe.prepTime,\n          onChange: handleChange,\n          required: true,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cookTime\",\n          className: \"form-label\",\n          children: \"Cooking Time (in minutes):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"cookTime\",\n          name: \"cookTime\",\n          value: recipe.cookTime,\n          onChange: handleChange,\n          required: true,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Ingredients List:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"ingredients-list\",\n          children: recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"ingredient-item\",\n            children: `${ingredient.name}: ${ingredient.quantity} ${ingredient.unit}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredient-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Ingredient Name\",\n            name: \"name\",\n            value: ingredient.name,\n            onChange: handleIngredientChange,\n            required: true,\n            disabled: isIngredientLocked,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"unit\",\n            value: ingredient.unit,\n            onChange: handleSelectChange,\n            required: true,\n            disabled: isIngredientLocked,\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this), unitOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"quantity\",\n            value: ingredient.quantity,\n            onChange: handleSelectChange,\n            required: true,\n            disabled: isIngredientLocked,\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 33\n            }, this), getQuantityOptions().map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 37\n            }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"custom\",\n              children: \"Custom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this), ingredient.quantity === 'custom' && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter quantity\",\n            value: customQuantity,\n            onChange: e => setCustomQuantity(e.target.value),\n            min: \"0\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addIngredient,\n            disabled: isIngredientLocked,\n            className: \"btn-add-ingredient\",\n            children: \"Add Ingredient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lock-ingredient-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"lockIngredients\",\n            checked: isIngredientLocked,\n            onChange: toggleIngredientLock,\n            className: \"form-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lockIngredients\",\n            className: \"form-label\",\n            children: \"Lock Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"instructions\",\n          className: \"form-label\",\n          children: \"Instructions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"instructions\",\n          name: \"instructions\",\n          value: recipe.instructions,\n          onChange: handleChange,\n          required: true,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveRecipe,\n        className: \"btn-save-recipe\",\n        children: \"Save Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 13\n  }, this);\n}\n_s(CreateRecipe, \"DgakTMVFjKEpwCV27bhEJ6GRLvk=\");\n_c = CreateRecipe;\nexport default CreateRecipe;\nvar _c;\n$RefreshReg$(_c, \"CreateRecipe\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CreateRecipe","_s","recipe","setRecipe","title","prepTime","cookTime","ingredients","instructions","ingredient","setIngredient","name","quantity","unit","isIngredientLocked","setIsIngredientLocked","customQuantity","setCustomQuantity","quantityOptions","Array","keys","map","i","unitOptions","handleChange","e","value","target","regex","test","prevRecipe","handleIngredientChange","prevIngredient","addIngredient","preventDefault","newIngredient","saveRecipe","trim","length","alert","data","post","then","response","console","log","catch","error","toggleIngredientLock","prevLock","handleSelectChange","getQuantityOptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","index","placeholder","disabled","option","min","onClick","checked","_c","$RefreshReg$"],"sources":["C:/Users/Tenka/Desktop/Cloud-Application-Architecture-Spring-2024-main/meal-plan-pro/Front-end/src/components/CreateRecipe.jsx"],"sourcesContent":["    import React, { useState } from 'react';\n    import axios from \"axios\";\n\n    function CreateRecipe() {\n        const [recipe, setRecipe] = useState({\n            title: '',\n            prepTime: '',\n            cookTime: '',\n            ingredients: [],\n            instructions: ''\n        });\n\n        const [ingredient, setIngredient] = useState({\n            name: '',\n            quantity: '',\n            unit: ''\n        });\n\n        const [isIngredientLocked, setIsIngredientLocked] = useState(false);\n        const [customQuantity, setCustomQuantity] = useState('');\n\n        const [quantityOptions] = useState([...Array(8).keys()].map(i => (i + 1) * 25));\n        const [unitOptions] = useState(['piece', 'mL', 'cl', 'L', 'g', 'kg', 'teaspoon', 'tablespoon']);\n\n        const handleChange = (e) => {\n            const { name, value } = e.target;\n            if (name === 'title') {\n                // Validation for title: only alphabet letters\n                const regex = /^[a-zA-Z\\s]*$/;\n                if (regex.test(value) || value === '') {\n                    setRecipe(prevRecipe => ({\n                        ...prevRecipe,\n                        [name]: value\n                    }));\n                }\n            } else if ((name === 'prepTime' || name === 'cookTime') && /^\\d+$/.test(value)) {\n                // Check if the field is prepTime or cookTime and the value is an integer\n                setRecipe(prevRecipe => ({\n                    ...prevRecipe,\n                    [name]: value\n                }));\n            } else if (name === 'instructions') {\n                // Validation for instructions: only alphabet letters\n                const regex = /^[a-zA-Z\\s]*$/;\n                if (regex.test(value) || value === '') {\n                    setRecipe(prevRecipe => ({\n                        ...prevRecipe,\n                        [name]: value\n                    }));\n                }\n            }\n        };\n\n        const handleIngredientChange = (e) => {\n            const { name, value } = e.target;\n            if (name === 'name') {\n                // Validation for ingredient name: only alphabet letters\n                const regex = /^[a-zA-Z\\s]*$/;\n                if (regex.test(value) || value === '') {\n                    setIngredient(prevIngredient => ({\n                        ...prevIngredient,\n                        [name]: value\n                    }));\n                }\n            } else {\n                setIngredient(prevIngredient => ({\n                    ...prevIngredient,\n                    [name]: value\n                }));\n            }\n        };\n\n        const addIngredient = (e) => {\n            e.preventDefault();\n            if (!isIngredientLocked) {\n                const newIngredient = { ...ingredient };\n                if (ingredient.quantity === 'custom') {\n                    newIngredient.quantity = customQuantity;\n                }\n                setRecipe(prevRecipe => ({\n                    ...prevRecipe,\n                    ingredients: [...prevRecipe.ingredients, newIngredient]\n                }));\n                setIngredient({\n                    name: '',\n                    quantity: '',\n                    unit: ''\n                });\n                setCustomQuantity('');\n            }\n        };\n\n        const saveRecipe = () => {\n            // Check if all required fields are filled\n            if (\n                recipe.title.trim() === '' ||\n                recipe.prepTime.trim() === '' ||\n                recipe.cookTime.trim() === '' ||\n                recipe.ingredients.length === 0 ||\n                recipe.instructions.trim() === ''\n            ) {\n                alert('Please fill in all required fields.');\n                return;\n            }\n\n            // Prepare data to send\n            const data = {\n                title: recipe.title,\n                prepTime: recipe.prepTime,\n                cookTime: recipe.cookTime,\n                ingredients: recipe.ingredients,\n                instructions: recipe.instructions\n            };\n\n            // Send data to the server\n            axios.post('http://localhost:5000/recipe-list', data)\n                .then(response => {\n                    console.log(response.data);\n                    alert('Recipe saved successfully!');\n                    // Reset the form after successfully saving\n                    setRecipe({\n                        title: '',\n                        prepTime: '',\n                        cookTime: '',\n                        ingredients: [],\n                        instructions: ''\n                    });\n                })\n                .catch(error => {\n                    console.error('Error saving recipe: ', error);\n                    alert('Error saving recipe.');\n                });\n        };\n\n        const toggleIngredientLock = () => {\n            setIsIngredientLocked(prevLock => !prevLock);\n        };\n\n        const handleSelectChange = (e) => {\n            const { name, value } = e.target;\n            if (value === 'custom') {\n                setIngredient(prevIngredient => ({\n                    ...prevIngredient,\n                    [name]: value\n                }));\n            } else {\n                setIngredient(prevIngredient => ({\n                    ...prevIngredient,\n                    [name]: value,\n                    quantity: value\n                }));\n            }\n        };\n\n        const getQuantityOptions = () => {\n            if (ingredient.unit === 'piece' || ingredient.unit === 'teaspoon' || ingredient.unit === 'tablespoon' || ingredient.unit === 'kg' || ingredient.unit === 'L') {\n                return [...Array(9).keys()].map(i => i + 1);\n            } else {\n                return [...Array(8).keys()].map(i => (i + 1) * 25);\n            }\n        };\n\n        return (\n            <div className=\"cr-body\">\n                <h2 className=\"cr-title\">Create a new recipe</h2>\n                <form className=\"cr-list\" onSubmit={e => e.preventDefault()}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"cr-list-title\" className=\"form-label\">Recipe Title:</label>\n                        <input\n                            type=\"text\"\n                            id=\"title\"\n                            name=\"title\"\n                            value={recipe.title}\n                            onChange={handleChange}\n                            required\n                            className=\"form-control\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"prepTime\" className=\"form-label\">Preparation Time (in minutes):</label>\n                        <input\n                            type=\"text\"\n                            id=\"prepTime\"\n                            name=\"prepTime\"\n                            value={recipe.prepTime}\n                            onChange={handleChange}\n                            required\n                            className=\"form-control\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"cookTime\" className=\"form-label\">Cooking Time (in minutes):</label>\n                        <input\n                            type=\"text\"\n                            id=\"cookTime\"\n                            name=\"cookTime\"\n                            value={recipe.cookTime}\n                            onChange={handleChange}\n                            required\n                            className=\"form-control\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"form-label\">Ingredients List:</label>\n                        <ul className=\"ingredients-list\">\n                            {recipe.ingredients.map((ingredient, index) => (\n                                <li key={index}\n                                    className=\"ingredient-item\">{`${ingredient.name}: ${ingredient.quantity} ${ingredient.unit}`}</li>\n                            ))}\n                        </ul>\n                        <div className=\"ingredient-inputs\">\n                            <input\n                                type=\"text\"\n                                placeholder=\"Ingredient Name\"\n                                name=\"name\"\n                                value={ingredient.name}\n                                onChange={handleIngredientChange}\n                                required\n                                disabled={isIngredientLocked}\n                                className=\"form-control\"\n                            />\n                            <select\n                                name=\"unit\"\n                                value={ingredient.unit}\n                                onChange={handleSelectChange}\n                                required\n                                disabled={isIngredientLocked}\n                                className=\"form-control\"\n                            >\n                                <option value=\"\">Select a unit</option>\n                                {unitOptions.map(option => (\n                                    <option key={option} value={option}>{option}</option>\n                                ))}\n                            </select>\n                            <select\n                                name=\"quantity\"\n                                value={ingredient.quantity}\n                                onChange={handleSelectChange}\n                                required\n                                disabled={isIngredientLocked}\n                                className=\"form-control\"\n                            >\n                                <option value=\"\">Select a quantity</option>\n                                {getQuantityOptions().map(option => (\n                                    <option key={option} value={option}>{option}</option>\n                                ))}\n                                <option value=\"custom\">Custom</option>\n                            </select>\n                            {ingredient.quantity === 'custom' && (\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Enter quantity\"\n                                    value={customQuantity}\n                                    onChange={e => setCustomQuantity(e.target.value)}\n                                    min=\"0\"\n                                    className=\"form-control\"\n                                />\n                            )}\n                            <button onClick={addIngredient} disabled={isIngredientLocked}\n                                    className=\"btn-add-ingredient\">Add Ingredient\n                            </button>\n                        </div>\n                        <div className=\"lock-ingredient-checkbox\">\n                            <input\n                                type=\"checkbox\"\n                                id=\"lockIngredients\"\n                                checked={isIngredientLocked}\n                                onChange={toggleIngredientLock}\n                                className=\"form-checkbox\"\n                            />\n                            <label htmlFor=\"lockIngredients\" className=\"form-label\">Lock Ingredients</label>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"instructions\" className=\"form-label\">Instructions:</label>\n                        <textarea\n                            id=\"instructions\"\n                            name=\"instructions\"\n                            value={recipe.instructions}\n                            onChange={handleChange}\n                            required\n                            className=\"form-control\"\n                        />\n                    </div>\n                    <button onClick={saveRecipe} className=\"btn-save-recipe\">Save Recipe</button>\n                </form>\n            </div>\n        );\n    }\n\n    export default CreateRecipe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}