{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tenka\\\\Desktop\\\\Cloud-Application-Architecture-Spring-2024-main\\\\meal-plan-pro\\\\Front-end\\\\src\\\\components\\\\ManageRecipeMealList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"./ManageRecipeMealList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManageRecipeMealList() {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [currentRecipeIndex, setCurrentRecipeIndex] = useState(0);\n  const [showDetails, setShowDetails] = useState(false);\n  const [isLoading, setIsLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/recipe-list');\n        setRecipes(response.data);\n        setIsLoading(false); // Update loading state\n      } catch (error) {\n        console.error('Error loading recipes:', error);\n      }\n    };\n    fetchRecipes();\n  }, []);\n  const handleDeleteRecipe = async recipeId => {\n    // Your delete recipe logic remains unchanged\n  };\n  const toggleDetails = () => {\n    setShowDetails(prevState => !prevState);\n  };\n  const nextRecipe = () => {\n    setCurrentRecipeIndex(prevIndex => prevIndex + 1);\n  };\n  const previousRecipe = () => {\n    setCurrentRecipeIndex(prevIndex => prevIndex - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mr-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mr-background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mr-title\",\n      children: \"List of Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mr-section\",\n      children: isLoading ?\n      /*#__PURE__*/\n      // Show loading indicator if still loading\n      _jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this) : recipes.length === 0 ?\n      /*#__PURE__*/\n      // Check if no recipes available\n      _jsxDEV(\"p\", {\n        className: \"mr-empty-message\",\n        children: \"No recipes found. Create your own recipes!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mr-list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(ManageRecipeMealList, \"cHxaYDa3zpGYbqVbGL+19VhoqjY=\");\n_c = ManageRecipeMealList;\nexport default ManageRecipeMealList;\nvar _c;\n$RefreshReg$(_c, \"ManageRecipeMealList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ManageRecipeMealList","_s","recipes","setRecipes","currentRecipeIndex","setCurrentRecipeIndex","showDetails","setShowDetails","isLoading","setIsLoading","fetchRecipes","response","get","data","error","console","handleDeleteRecipe","recipeId","toggleDetails","prevState","nextRecipe","prevIndex","previousRecipe","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/Tenka/Desktop/Cloud-Application-Architecture-Spring-2024-main/meal-plan-pro/Front-end/src/components/ManageRecipeMealList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"./ManageRecipeMealList.css\"\n\nfunction ManageRecipeMealList() {\n    const [recipes, setRecipes] = useState([]);\n    const [currentRecipeIndex, setCurrentRecipeIndex] = useState(0);\n    const [showDetails, setShowDetails] = useState(false);\n    const [isLoading, setIsLoading] = useState(true); // Add loading state\n\n    useEffect(() => {\n        const fetchRecipes = async () => {\n            try {\n                const response = await axios.get('http://localhost:5000/recipe-list');\n                setRecipes(response.data);\n                setIsLoading(false); // Update loading state\n            } catch (error) {\n                console.error('Error loading recipes:', error);\n            }\n        };\n\n        fetchRecipes();\n    }, []);\n\n    const handleDeleteRecipe = async (recipeId) => {\n        // Your delete recipe logic remains unchanged\n    };\n\n    const toggleDetails = () => {\n        setShowDetails(prevState => !prevState);\n    };\n\n    const nextRecipe = () => {\n        setCurrentRecipeIndex(prevIndex => prevIndex + 1);\n    };\n\n    const previousRecipe = () => {\n        setCurrentRecipeIndex(prevIndex => prevIndex - 1);\n    };\n\n    return (\n        <div className=\"mr-body\">\n            <div className=\"mr-background\"></div>\n            <h2 className=\"mr-title\">List of Recipes</h2>\n            <div className=\"mr-section\">\n                {isLoading ? ( // Show loading indicator if still loading\n                    <p>Loading...</p>\n                ) : recipes.length === 0 ? ( // Check if no recipes available\n                    <p className=\"mr-empty-message\">No recipes found. Create your own recipes!</p>\n                ) : (\n                    <div className=\"mr-list\">\n                        {/* Your recipe list rendering logic */}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default ManageRecipeMealList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}