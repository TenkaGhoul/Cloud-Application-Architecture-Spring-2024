{"ast":null,"code":"var _jsxFileName = \"/home/tenka/Unicorn/Cloud_Computing/meal-plan-pro/Front-end/src/components/ListeRecettesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListeRecettesPage() {\n  _s();\n  const [recipe, setRecipe] = useState({\n    title: '',\n    prepTime: '',\n    cookTime: '',\n    ingredients: [],\n    instructions: ''\n  });\n  const [ingredient, setIngredient] = useState({\n    name: '',\n    quantity: '',\n    unit: ''\n  });\n  const [isIngredientLocked, setIsIngredientLocked] = useState(false);\n  const [customQuantity, setCustomQuantity] = useState('');\n  const [quantityOptions] = useState([...Array(8).keys()].map(i => (i + 1) * 25));\n  const [unitOptions] = useState(['pièce', 'mL', 'cl', 'L', 'g', 'kg', 'cuillère à café', 'cuillère à soupe']);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRecipe(prevRecipe => ({\n      ...prevRecipe,\n      [name]: value\n    }));\n  };\n  const handleIngredientChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setIngredient(prevIngredient => ({\n      ...prevIngredient,\n      [name]: value\n    }));\n  };\n  const addIngredient = e => {\n    e.preventDefault();\n    if (!isIngredientLocked) {\n      const newIngredient = {\n        ...ingredient\n      };\n      if (ingredient.quantity === 'custom') {\n        newIngredient.quantity = customQuantity;\n      }\n      setRecipe(prevRecipe => ({\n        ...prevRecipe,\n        ingredients: [...prevRecipe.ingredients, newIngredient]\n      }));\n      setIngredient({\n        name: '',\n        quantity: '',\n        unit: ''\n      });\n      setCustomQuantity('');\n    }\n  };\n  const sauvegarderRecette = () => {\n    // Préparez les données à envoyer\n    const data = {\n      title: recipe.title,\n      prepTime: recipe.prepTime,\n      cookTime: recipe.cookTime,\n      ingredients: recipe.ingredients,\n      instructions: recipe.instructions\n    };\n\n    // Envoyez les données au serveur\n    axios.post('http://localhost:5000/recipe-list', data).then(response => {\n      console.log(response.data);\n      alert('Recette sauvegardée avec succès !');\n      // Réinitialisez le formulaire après avoir sauvegardé avec succès\n      setRecipe({\n        title: '',\n        prepTime: '',\n        cookTime: '',\n        ingredients: [],\n        instructions: ''\n      });\n    }).catch(error => {\n      console.error('Erreur lors de la sauvegarde de la recette : ', error);\n      alert('Erreur lors de la sauvegarde de la recette.');\n    });\n  };\n  const toggleIngredientLock = () => {\n    setIsIngredientLocked(prevLock => !prevLock);\n  };\n  const handleSelectChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (value === 'custom') {\n      setIngredient(prevIngredient => ({\n        ...prevIngredient,\n        [name]: value\n      }));\n    } else {\n      setIngredient(prevIngredient => ({\n        ...prevIngredient,\n        [name]: value,\n        quantity: value\n      }));\n    }\n  };\n  const getQuantityOptions = () => {\n    if (ingredient.unit === 'pièce' || ingredient.unit === 'cuillère à café' || ingredient.unit === 'cuillère à soupe') {\n      return [...Array(9).keys()].map(i => i + 1);\n    } else {\n      return [...Array(8).keys()].map(i => (i + 1) * 25);\n    }\n  };\n  const isTitleValid = title => {\n    // Validation du titre avec une expression régulière\n    const titleRegex = /^[a-zA-Z\\s]*$/;\n    return titleRegex.test(title);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cr\\xE9er une nouvelle recette\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Titre de la recette:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          value: recipe.title,\n          onChange: handleChange,\n          required: true,\n          pattern: \"[a-zA-Z\\\\s]*\",\n          title: \"Le titre ne peut contenir que des lettres de l'alphabet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n_s(ListeRecettesPage, \"nUcDFZTWXcL9MJAu+mIGBPJcxVA=\");\n_c = ListeRecettesPage;\nexport default ListeRecettesPage;\nvar _c;\n$RefreshReg$(_c, \"ListeRecettesPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ListeRecettesPage","_s","recipe","setRecipe","title","prepTime","cookTime","ingredients","instructions","ingredient","setIngredient","name","quantity","unit","isIngredientLocked","setIsIngredientLocked","customQuantity","setCustomQuantity","quantityOptions","Array","keys","map","i","unitOptions","handleChange","e","value","target","prevRecipe","handleIngredientChange","prevIngredient","addIngredient","preventDefault","newIngredient","sauvegarderRecette","data","post","then","response","console","log","alert","catch","error","toggleIngredientLock","prevLock","handleSelectChange","getQuantityOptions","isTitleValid","titleRegex","test","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","pattern","_c","$RefreshReg$"],"sources":["/home/tenka/Unicorn/Cloud_Computing/meal-plan-pro/Front-end/src/components/ListeRecettesPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from \"axios\";\n\nfunction ListeRecettesPage() {\n    const [recipe, setRecipe] = useState({\n        title: '',\n        prepTime: '',\n        cookTime: '',\n        ingredients: [],\n        instructions: ''\n    });\n\n    const [ingredient, setIngredient] = useState({\n        name: '',\n        quantity: '',\n        unit: ''\n    });\n\n    const [isIngredientLocked, setIsIngredientLocked] = useState(false);\n    const [customQuantity, setCustomQuantity] = useState('');\n\n    const [quantityOptions] = useState([...Array(8).keys()].map(i => (i + 1) * 25));\n    const [unitOptions] = useState(['pièce', 'mL', 'cl', 'L', 'g', 'kg', 'cuillère à café', 'cuillère à soupe']);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setRecipe(prevRecipe => ({\n            ...prevRecipe,\n            [name]: value\n        }));\n    };\n\n    const handleIngredientChange = (e) => {\n        const { name, value } = e.target;\n        setIngredient(prevIngredient => ({\n            ...prevIngredient,\n            [name]: value\n        }));\n    };\n\n    const addIngredient = (e) => {\n        e.preventDefault();\n        if (!isIngredientLocked) {\n            const newIngredient = { ...ingredient };\n            if (ingredient.quantity === 'custom') {\n                newIngredient.quantity = customQuantity;\n            }\n            setRecipe(prevRecipe => ({\n                ...prevRecipe,\n                ingredients: [...prevRecipe.ingredients, newIngredient]\n            }));\n            setIngredient({\n                name: '',\n                quantity: '',\n                unit: ''\n            });\n            setCustomQuantity('');\n        }\n    };\n\n    const sauvegarderRecette = () => {\n        // Préparez les données à envoyer\n        const data = {\n            title: recipe.title,\n            prepTime: recipe.prepTime,\n            cookTime: recipe.cookTime,\n            ingredients: recipe.ingredients,\n            instructions: recipe.instructions\n        };\n\n        // Envoyez les données au serveur\n        axios.post('http://localhost:5000/recipe-list', data)\n            .then(response => {\n                console.log(response.data);\n                alert('Recette sauvegardée avec succès !');\n                // Réinitialisez le formulaire après avoir sauvegardé avec succès\n                setRecipe({\n                    title: '',\n                    prepTime: '',\n                    cookTime: '',\n                    ingredients: [],\n                    instructions: ''\n                });\n            })\n            .catch(error => {\n                console.error('Erreur lors de la sauvegarde de la recette : ', error);\n                alert('Erreur lors de la sauvegarde de la recette.');\n            });\n    };\n\n    const toggleIngredientLock = () => {\n        setIsIngredientLocked(prevLock => !prevLock);\n    };\n\n    const handleSelectChange = (e) => {\n        const { name, value } = e.target;\n        if (value === 'custom') {\n            setIngredient(prevIngredient => ({\n                ...prevIngredient,\n                [name]: value\n            }));\n        } else {\n            setIngredient(prevIngredient => ({\n                ...prevIngredient,\n                [name]: value,\n                quantity: value\n            }));\n        }\n    };\n\n    const getQuantityOptions = () => {\n        if (ingredient.unit === 'pièce' || ingredient.unit === 'cuillère à café' || ingredient.unit === 'cuillère à soupe') {\n            return [...Array(9).keys()].map(i => i + 1);\n        } else {\n            return [...Array(8).keys()].map(i => (i + 1) * 25);\n        }\n    };\n\n    const isTitleValid = (title) => {\n        // Validation du titre avec une expression régulière\n        const titleRegex = /^[a-zA-Z\\s]*$/;\n        return titleRegex.test(title);\n    };\n\n    return (\n        <div>\n            <h2>Créer une nouvelle recette</h2>\n            <form onSubmit={e => e.preventDefault()}>\n                <div>\n                    <label htmlFor=\"title\">Titre de la recette:</label>\n                    <input\n                        type=\"text\"\n                        id=\"title\"\n                        name=\"title\"\n                        value={recipe.title}\n                        onChange={handleChange}\n                        required\n                        pattern=\"[a-zA-Z\\s]*\"\n                        title=\"Le titre ne peut contenir que des lettres de l'alphabet.\"\n                    />\n                </div>\n                {/* ...Rest of the form */}\n            </form>\n        </div>\n    );\n}\n\nexport default ListeRecettesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}